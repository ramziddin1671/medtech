# Generated by Django 4.1.7 on 2023-04-17 06:24

import ckeditor.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Banner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500)),
                ('description', ckeditor.fields.RichTextField()),
                ('image', models.ImageField(blank=True, upload_to='images/')),
                ('button', models.CharField(max_length=20)),
                ('button_phone', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='CategoryConsumables',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='CategoryOborodvnya',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='CategoryReagents',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='CategoryService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='EquipmentImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, upload_to='images/')),
            ],
        ),
        migrations.CreateModel(
            name='Faq',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=500)),
                ('answer', ckeditor.fields.RichTextField()),
            ],
        ),
        migrations.CreateModel(
            name='LidersCategories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500)),
                ('subtitle', models.CharField(max_length=500)),
                ('description', ckeditor.fields.RichTextField()),
                ('date', models.DateField()),
                ('views', models.IntegerField(default=0)),
                ('image', models.ImageField(blank=True, upload_to='images/')),
                ('keyword', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='Partners',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logo', models.ImageField(blank=True, upload_to='images/')),
                ('linkPartner', models.URLField(blank=True, max_length=500, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='RepairImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/')),
            ],
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('phon_number', models.CharField(max_length=20)),
                ('message', models.TextField()),
                ('organization', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='RequestCall',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('phon_number', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Web',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logo', models.ImageField(blank=True, upload_to='images/')),
                ('address', models.CharField(max_length=500)),
                ('phone', models.CharField(max_length=15)),
                ('email', models.EmailField(max_length=254)),
                ('facebook', models.URLField(blank=True, max_length=500, null=True)),
                ('instagram', models.URLField(blank=True, max_length=500, null=True)),
                ('youtube', models.URLField(blank=True, max_length=500, null=True)),
                ('telegram', models.URLField(blank=True, max_length=500, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Repair',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500)),
                ('views', models.IntegerField(default=0)),
                ('touch', models.IntegerField(default=0)),
                ('organization', models.CharField(max_length=500)),
                ('description', ckeditor.fields.RichTextField()),
                ('instagram', models.URLField(blank=True, max_length=500, null=True)),
                ('telegram', models.URLField(blank=True, max_length=500, null=True)),
                ('phone', models.CharField(max_length=15)),
                ('email', models.EmailField(max_length=254)),
                ('price', models.FloatField()),
                ('RepairImage', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='polls.repairimage')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='polls.categoryservice')),
            ],
        ),
        migrations.CreateModel(
            name='Reagents',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(max_length=500)),
                ('title', models.CharField(max_length=500)),
                ('releasedate', models.DateField()),
                ('manufacturer', models.CharField(max_length=500)),
                ('tests', models.IntegerField()),
                ('supplier', models.CharField(max_length=100)),
                ('price', models.FloatField()),
                ('phone', models.CharField(max_length=100)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='polls.categoryreagents')),
            ],
        ),
        migrations.CreateModel(
            name='Parts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500)),
                ('unit', models.IntegerField()),
                ('manufacturer', models.CharField(max_length=500)),
                ('organization', models.CharField(max_length=500)),
                ('price', models.FloatField()),
                ('phone', models.CharField(max_length=100)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='polls.categoryservice')),
            ],
        ),
        migrations.CreateModel(
            name='Liders',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Model', models.CharField(max_length=500)),
                ('country', models.CharField(max_length=100)),
                ('postavshik', models.CharField(max_length=100)),
                ('brend', models.CharField(max_length=100)),
                ('description', ckeditor.fields.RichTextField()),
                ('instagram', models.URLField(blank=True, max_length=500, null=True)),
                ('telegram', models.URLField(blank=True, max_length=500, null=True)),
                ('phone', models.CharField(max_length=15)),
                ('email', models.EmailField(max_length=254)),
                ('image', models.ImageField(blank=True, upload_to='images/')),
                ('price', models.FloatField()),
                ('pulbirligi', models.CharField(max_length=10)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='polls.liderscategories')),
            ],
        ),
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(max_length=500)),
                ('views', models.IntegerField(default=0)),
                ('touch', models.IntegerField(default=0)),
                ('country', models.CharField(max_length=100)),
                ('supplier', models.CharField(max_length=100)),
                ('brand', models.CharField(max_length=100)),
                ('description', ckeditor.fields.RichTextField()),
                ('instagram', models.URLField(blank=True, max_length=500, null=True)),
                ('telegram', models.URLField(blank=True, max_length=500, null=True)),
                ('phone', models.CharField(max_length=15)),
                ('email', models.EmailField(max_length=254)),
                ('price', models.FloatField()),
                ('Image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='polls.equipmentimage')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='polls.categoryoborodvnya')),
            ],
        ),
        migrations.CreateModel(
            name='Consumables',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(max_length=500)),
                ('title', models.CharField(max_length=500)),
                ('unit', models.IntegerField()),
                ('manufacturer', models.CharField(max_length=500)),
                ('organization', models.CharField(max_length=500)),
                ('price', models.FloatField()),
                ('phone', models.CharField(max_length=100)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='polls.categoryconsumables')),
            ],
        ),
    ]
